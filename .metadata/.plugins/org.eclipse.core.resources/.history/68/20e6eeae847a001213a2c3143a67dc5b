import java.awt.LayoutManager;
import java.awt.Point;

import javax.swing.*;
import java.awt.*;


public class InputFrame extends JFrame{

	JPanel artistPane;
	JPanel stagePane;
	JPanel performancePane;
	JPanel festivalPane;
	JPanel errorPane;
	IO io;
	
	public InputFrame(String source, Point sourcePoint, IO io){
		this.io = io;
		setDefaultCloseOperation(DISPOSE_ON_CLOSE);		
		setLocation(new Point(sourcePoint.x + 150, sourcePoint.y + 150));
		errorPane = new JPanel(null);
		errorPane.add(new JLabel("Uh oh."));
		
		switch(source){
		case "artist":
			setContentPane(makeArtistPane());
			break;
		case "stage":
			setContentPane(makeStagePane());
			break;
		case "performance":
			setContentPane(makePerformancePane());
			break;
		default:
			setContentPane(errorPane);
		}
		setSize(300,300);
		setVisible(true);
	}
	
	public JPanel makeArtistPane(){
		//Creates itself and container
		artistPane = new JPanel(new GridLayout(2,3));
		JComponent[] comps = new JComponent[6];
		//Components
		comps[0] = new JLabel("Name: ");
		comps[1] = new JTextField("name");
		comps[2] = new JLabel ("Genre: ");
		comps[3] = new JTextField("genre");
		comps[4] = new JLabel ("Misc: ");
		comps[5] = new JTextField("misc");
		//Setting data
		
		//Add ingredients to the soup
		for(int i = 0; i < comps.length; i++)
			artistPane.add(comps[i]);
		//Finish
		return artistPane;
	}
	public JPanel makeStagePane(){
		stagePane = new JPanel(new FlowLayout(FlowLayout.LEFT));
		stagePane.add(new JLabel("Is stage!"));
		return stagePane;
	}
	public JPanel makePerformancePane(){
		performancePane = new JPanel(new FlowLayout(FlowLayout.LEFT));
		performancePane.add(new JLabel("Is performance!"));
		return performancePane;
	}	
	public JPanel makeInputPane(){
		performancePane = new JPanel(new FlowLayout(FlowLayout.LEFT));
		performancePane.add(new JLabel("Is input!"));
		return performancePane;
	}	
}
