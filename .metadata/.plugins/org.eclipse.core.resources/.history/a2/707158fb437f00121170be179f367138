import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.LinkedList;

import javax.swing.*;


public class PerformancePanel{
	
	public JPanel makePerformancePane(JFrame frame){
		JPanel performancePane = new JPanel(new BorderLayout());
		LinkedList<Stage> stages = IO.getInstance().getFestival().getStages();
		String[] stageNames = new String[stages.size()];
		for(int i = 0; i < stages.size(); i++){
			stageNames[i] = stages.get(i).getName();
		}
		LinkedList<Artist> artists = IO.getInstance().getFestival().getArtists();
		DefaultListModel<String> artistNames = new DefaultListModel<String>();
		for(int i = 0; i < artists.size(); i++){
			artistNames.addElement(artists.get(i).getName());
		}	
		JList<String> artistsList = new JList<String>(artistNames);
		JList<String> artistQueue = new JList<String>();
		JScrollPane artistQueuePane = new JScrollPane(artistQueue);
		JButton artistAdd = new JButton("»");
		artistAdd.addActionListener(new ListUpdateListener((String) artistsList.getSelectedValue(), artistQueuePane, performancePane));
		JButton artistRemove = new JButton("«");
		artistRemove.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				//TODO.
			}
		});
		JComponent[] comps = new JComponent[]{
				new JLabel("Stages"),//0
				new JLabel("Artists"),//1
				new JLabel("Adding"),//2
				new JLabel("Start time: "),//3
				new JLabel("End time: "),//4
				new JLabel("Estimated popularity: "),//5
				new JTextField("start time"),//6
				new JTextField("end time"),//7
				new JTextField("popularity"),//8
				new JList<String>(stageNames),//9 (stages)
				artistQueue
			};
		JButton okButton = new JButton("OK");
		okButton.addActionListener(new InputListener(frame, comps, "performance"));
		
		JPanel leftPanel = new JPanel(new GridLayout(1,1));//Stage list
		JPanel centerPanel = new JPanel(new BorderLayout());//Container for center panels
		JPanel southPanel = new JPanel(new GridLayout(1, 2));//OK button
		JPanel centerTopPanel = new JPanel(new GridLayout(1,3));//Artist list,buttons and Adding List
		JPanel centerBottomPanel = new JPanel(new GridLayout(3,2));//Start time, end time and estimated popularity.

		leftPanel.add(new JScrollPane(comps[9]));
		leftPanel.setSize(new Dimension(100, 300));
		southPanel.add(okButton);
		centerTopPanel.add(new JScrollPane(artistsList));
		centerTopPanel.add(artistAdd);
		centerTopPanel.add(artistRemove);
		centerTopPanel.add(artistQueuePane);
		centerBottomPanel.add(comps[3]);
		centerBottomPanel.add(comps[6]);
		centerBottomPanel.add(comps[4]);
		centerBottomPanel.add(comps[7]);
		centerBottomPanel.add(comps[5]);
		centerBottomPanel.add(comps[8]);
		
		southPanel.add(okButton);
		centerPanel.add(centerTopPanel, BorderLayout.NORTH);
		centerPanel.add(centerBottomPanel, BorderLayout.SOUTH);
		performancePane.add(leftPanel, BorderLayout.WEST);
		performancePane.add(centerPanel, BorderLayout.CENTER);
		performancePane.add(southPanel, BorderLayout.SOUTH);
		
		return performancePane;
	}	
	public JPanel editPerformancePane(JFrame frame, String targetPerformance){
		JPanel performancePane = new JPanel(new FlowLayout(FlowLayout.LEFT));
		performancePane.add(new JLabel("Is performance!"));
		return performancePane;
	}	
}

class ListUpdateListener implements ActionListener{
	static DefaultListModel<String> artistQueueList;
	String toAdd;
	JPanel pane;
	JScrollPane artistQueuePane;
	
	public ListUpdateListener(String toAdd, JScrollPane artistQueuePane, JPanel pane){
		if(artistQueueList == null){
			artistQueueList = new DefaultListModel<String>();
		}
		this.pane = pane;
		this.toAdd = toAdd;
		this.artistQueuePane = artistQueuePane;
	}
	
	public void actionPerformed(ActionEvent e) {
		artistQueueList.addElement(toAdd);
		JList<String> artistQueue = new JList<String>(artistQueueList);		
		artistQueuePane = new JScrollPane(artistQueue);
		pane.repaint();
	}
}