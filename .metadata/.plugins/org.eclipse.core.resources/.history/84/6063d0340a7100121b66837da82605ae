import java.io.*;
/**
 * Handles file IO for festivals and holds the GUI. Will pass festival objects to GUI.
 * @author Julian G. West
 *
 */
public class IO {
	private Festival festival;	
	private String filePath;	
	
	File festiFile;	
	
	public IO(){
		
	}
	
	public IO(String filePath){
		this.filePath = filePath;
		festiFile = new File(filePath);
	}
	
	public Festival getFestival() {
		return festival;
	}
	public void setNewFestival(String filePath){
		this.filePath = filePath;
		festival = new Festival();
	}
	public void setFestival(Festival festival) {
		this.festival = festival;
	}
	public String getFilePath() {
		return filePath;
	}
	public void setFilePath(String filePath) {
		this.filePath = filePath;
	}
	public File getFestiFile() {
		return festiFile;
	}
	public void setFestiFile(File festiFile) {
		this.festiFile = festiFile;
	}
	
	public void openFestival() throws IOException{
		ObjectInputStream objIn;
		try{
			objIn = new ObjectInputStream(new FileInputStream(filePath));
			setFestival((Festival) objIn.readObject());
			objIn.close();
		} catch (ClassNotFoundException e) {
			System.out.println("Class not found");
			e.printStackTrace();
		}
	}
	
	public void saveFestival() throws IOException, NullPointerException{
		ObjectOutputStream objOut;
			if(festiFile == null)
				throw new NullPointerException();
			else{
				if(festiFile.exists()){
					objOut = new ObjectOutputStream(new FileOutputStream(filePath));
					objOut.writeObject(festival);
					objOut.close();
				} else {
					festiFile.createNewFile();
					objOut = new ObjectOutputStream(new FileOutputStream(filePath));
					objOut.writeObject(festival);
					objOut.close();
				}
			}
	}
	
	public void printFestival(){
		System.out.println("Festival: " + filePath);
		if(festival != null)
			System.out.print(festival.toString());
		else
			System.out.println("No current festival");
	}
}
